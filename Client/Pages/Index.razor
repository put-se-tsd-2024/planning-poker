@page "/"
@using PlanningPoker.Client.Services
@using PlanningPoker.Shared

@inject NavigationManager NavigationManager
@inject RoomStatusManager StatusManager
@inject IJSRuntime JsRuntime
<PageTitle>Home</PageTitle>


<div class="container">
    <h1>Welcome to Planning Poker!</h1>
    <div class="input-group">
        <input type="text" class="form-control" @bind="StatusManager.Player.Name" @bind:event="oninput" placeholder="Your Name" />
        <button type="button" class="btn btn-primary btn-spring-green" @onclick="Start" disabled="@(string.IsNullOrWhiteSpace(StatusManager.Player.Name))">Create Room</button>
    </div>
    <br />
    <div class="input-group">
        <input @bind="StatusManager.Room.Id" @bind:event="oninput" class="form-control" type="text" placeholder="Room ID" />
        <button type="button" class="btn btn-primary btn-spring-green" @onclick="() => JoinExistingRoom()" disabled="@(StatusManager.IsStatusReady==false)">Join Room</button>
    </div>
</div>


@code {
    private RoomType _roomType = RoomType.None;

    private void InitNewRoom()
    {
        var random = new Random();

        _roomType = RoomType.New;
        StatusManager.Room.Id = random.Next(1000,9999).ToString();
    }

    private void JoinExistingRoom()
    {
        _roomType = RoomType.Existing;
        NavigationManager.NavigateTo("/Room/"+StatusManager.Room.Id);
        
    }

    private void Start()
    {
        var random = new Random();
        _roomType = RoomType.New;
        StatusManager.Room.Id = random.Next(1000,9999).ToString();
        NavigationManager.NavigateTo(StatusManager.GetRoomUrl(NavigationManager));  
    }

    private enum RoomType
    {
        None,
        New,
        Existing
    }
}