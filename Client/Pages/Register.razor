@page "/register"
@inject NavigationManager NavigationManager
@inject HttpClient Http

@using PlanningPoker.Shared

<div class="container">
    <h1>Register</h1>
    <EditForm Model="registerModel" OnValidSubmit="HandleRegistration">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="email">Email</label>
            <InputText id="email" class="form-control" @bind-Value="registerModel.Email" placeholder="Enter your email" />
            <ValidationMessage For="@(() => registerModel.Email)" class="validation-message" />
        </div>

        <div class="form-group">
            <label for="password">Password</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="registerModel.Password" placeholder="Enter your password" />
            <ValidationMessage For="@(() => registerModel.Password)" class="validation-message" />
        </div>

        <div class="form-group">
            <label for="name">First Name</label>
            <InputText id="name" class="form-control" @bind-Value="registerModel.Name" placeholder="Enter your first name" />
            <ValidationMessage For="@(() => registerModel.Name)" class="validation-message" />
        </div>

        <div class="form-group">
            <label for="surname">Last Name</label>
            <InputText id="surname" class="form-control" @bind-Value="registerModel.Surname" placeholder="Enter your last name" />
            <ValidationMessage For="@(() => registerModel.Surname)" class="validation-message" />
        </div>

        <div class="form-group">
            <label>
                <InputCheckbox @bind-Value="acceptPolicy" /> I accept the <a href="/privacy-policy" class="link">personal data policy</a>.
            </label>
            <ValidationMessage For="@(() => acceptPolicy)" class="validation-message" />
        </div>

        <button type="submit" class="btn btn-primary btn-spring-green" disabled="@(acceptPolicy == false)">Register</button>
    </EditForm>
</div>

@code {
    private RegisterModel registerModel = new RegisterModel();
    private bool acceptPolicy = false;

    private async Task HandleRegistration()
    {
        var response = await Http.PostAsJsonAsync("api/account/register", registerModel);
        if (response.IsSuccessStatusCode && acceptPolicy)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            // Handle errors
        }
    }
}
